TODO -- a list of general things I left out so I could get a working system quickly

The Language in general
	indentation inside parenthesis
	instantiate a module with parameters within a long id
	automated testing (esp. unit and regression)
	low-syntactic-overhead way to introduce a constraint


Primitives
	all kinds of data types and operations
		when I get to this, I should have some sort of code generator
		it can generate all the code to link up the interpreter/compiler with the implementation
Lexer/Parser
	string interpolation
		for this, I need to track at least paren depth, probably general enclosement depth
	literate files
	unicodizing
	line comments take inordinately long to parse (noticable at 8 or more, grows apparently exponentially)
	comprehensions

Sugar
	notation should be parsed in the lexer
	override the spellings of keywords
	error report notation config
	validate notation better:
		use and level are reserved as notation names
		no underscores in notation names
		always slots in distfix parts, but not consecutive slots
		no double-definition
		define before use
